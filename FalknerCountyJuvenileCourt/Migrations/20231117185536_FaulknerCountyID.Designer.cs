// <auto-generated />
using System;
using FalknerCountyJuvenileCourt.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FalknerCountyJuvenileCourt.Migrations
{
    [DbContext(typeof(CourtContext))]
    [Migration("20231117185536_FaulknerCountyID")]
    partial class FaulknerCountyID
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("FalknerCountyJuvenileCourt.Models.Crime", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("TEXT");

                    b.Property<bool>("DrugCourt")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DrugOffense")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FilingDecisionID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IntakeDecisionID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("JuvenileID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OffenseID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SchoolID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("FilingDecisionID");

                    b.HasIndex("IntakeDecisionID");

                    b.HasIndex("JuvenileID");

                    b.HasIndex("OffenseID");

                    b.HasIndex("SchoolID");

                    b.ToTable("Crime", (string)null);
                });

            modelBuilder.Entity("FalknerCountyJuvenileCourt.Models.FilingDecision", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Filing Decision", (string)null);
                });

            modelBuilder.Entity("FalknerCountyJuvenileCourt.Models.Gender", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Gender", (string)null);
                });

            modelBuilder.Entity("FalknerCountyJuvenileCourt.Models.IntakeDecision", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Intake Decision", (string)null);
                });

            modelBuilder.Entity("FalknerCountyJuvenileCourt.Models.Juvenile", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FaulknerCountyIdentification")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("GenderID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RaceID")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Repeat")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RiskID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SchoolID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("GenderID");

                    b.HasIndex("RaceID");

                    b.HasIndex("RiskID");

                    b.HasIndex("SchoolID");

                    b.ToTable("Juveniles", (string)null);
                });

            modelBuilder.Entity("FalknerCountyJuvenileCourt.Models.Offense", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Offense", (string)null);
                });

            modelBuilder.Entity("FalknerCountyJuvenileCourt.Models.Race", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Race", (string)null);
                });

            modelBuilder.Entity("FalknerCountyJuvenileCourt.Models.Risk", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Name")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Risk", (string)null);
                });

            modelBuilder.Entity("FalknerCountyJuvenileCourt.Models.School", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("School", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("FalknerCountyJuvenileCourt.Models.Crime", b =>
                {
                    b.HasOne("FalknerCountyJuvenileCourt.Models.FilingDecision", "FilingDecision")
                        .WithMany("Crimes")
                        .HasForeignKey("FilingDecisionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FalknerCountyJuvenileCourt.Models.IntakeDecision", "IntakeDecision")
                        .WithMany("Crimes")
                        .HasForeignKey("IntakeDecisionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FalknerCountyJuvenileCourt.Models.Juvenile", "Juvenile")
                        .WithMany("Crimes")
                        .HasForeignKey("JuvenileID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FalknerCountyJuvenileCourt.Models.Offense", "Offense")
                        .WithMany("Crimes")
                        .HasForeignKey("OffenseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FalknerCountyJuvenileCourt.Models.School", "School")
                        .WithMany()
                        .HasForeignKey("SchoolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FilingDecision");

                    b.Navigation("IntakeDecision");

                    b.Navigation("Juvenile");

                    b.Navigation("Offense");

                    b.Navigation("School");
                });

            modelBuilder.Entity("FalknerCountyJuvenileCourt.Models.Juvenile", b =>
                {
                    b.HasOne("FalknerCountyJuvenileCourt.Models.Gender", "Gender")
                        .WithMany("Juveniles")
                        .HasForeignKey("GenderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FalknerCountyJuvenileCourt.Models.Race", "Race")
                        .WithMany("Juveniles")
                        .HasForeignKey("RaceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FalknerCountyJuvenileCourt.Models.Risk", "Risk")
                        .WithMany("Juveniles")
                        .HasForeignKey("RiskID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FalknerCountyJuvenileCourt.Models.School", null)
                        .WithMany("Juveniles")
                        .HasForeignKey("SchoolID");

                    b.Navigation("Gender");

                    b.Navigation("Race");

                    b.Navigation("Risk");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FalknerCountyJuvenileCourt.Models.FilingDecision", b =>
                {
                    b.Navigation("Crimes");
                });

            modelBuilder.Entity("FalknerCountyJuvenileCourt.Models.Gender", b =>
                {
                    b.Navigation("Juveniles");
                });

            modelBuilder.Entity("FalknerCountyJuvenileCourt.Models.IntakeDecision", b =>
                {
                    b.Navigation("Crimes");
                });

            modelBuilder.Entity("FalknerCountyJuvenileCourt.Models.Juvenile", b =>
                {
                    b.Navigation("Crimes");
                });

            modelBuilder.Entity("FalknerCountyJuvenileCourt.Models.Offense", b =>
                {
                    b.Navigation("Crimes");
                });

            modelBuilder.Entity("FalknerCountyJuvenileCourt.Models.Race", b =>
                {
                    b.Navigation("Juveniles");
                });

            modelBuilder.Entity("FalknerCountyJuvenileCourt.Models.Risk", b =>
                {
                    b.Navigation("Juveniles");
                });

            modelBuilder.Entity("FalknerCountyJuvenileCourt.Models.School", b =>
                {
                    b.Navigation("Juveniles");
                });
#pragma warning restore 612, 618
        }
    }
}

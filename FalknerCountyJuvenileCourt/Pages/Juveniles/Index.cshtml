@page
@model FalknerCountyJuvenileCourt.Pages.Juveniles.IndexModel

@{
    ViewData["Title"] = "Juveniles";
}



<h1>Juveniles</h1>

<p>
    <a id="Cbtn" asp-page="Create">Create New</a>
</p>

<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by ID:
            <input type="text" name="SearchID" value="@Model.CurrentFilter" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a id="Back_To_List" asp-page="./Index">Back to full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
               <a id="Back_To_List" asp-page="./Index" asp-route-sortOrder="@Model.IDSort"
                  asp-route-currentFilter="@Model.CurrentFilter">
                  @Html.DisplayNameFor(model => model.Juveniles[0].ID)
               </a>
            </th>
            <th>
               <a id="Back_To_List" asp-page="./Index" asp-route-sortOrder="@Model.AgeSort"
                  asp-route-currentFilter="@Model.CurrentFilter">
                  @Html.DisplayNameFor(model => model.Juveniles[0].Age)
               </a>
            </th>
            <th>
               <a id="Back_To_List" asp-page="./Index" asp-route-sortOrder="@Model.RaceSort"
                  asp-route-currentFilter="@Model.CurrentFilter">
                  @Html.DisplayNameFor(model => model.Juveniles[0].Race)
               </a>
            </th>
            <th>
               <a id="Back_To_List" asp-page="./Index" asp-route-sortOrder="@Model.GenderSort"
                  asp-route-currentFilter="@Model.CurrentFilter">
                  @Html.DisplayNameFor(model => model.Juveniles[0].Gender)
               </a>
            </th>
            <th>
               <a id="Back_To_List" asp-page="./Index" asp-route-sortOrder="@Model.RiskSort"
                  asp-route-currentFilter="@Model.CurrentFilter">
                  @Html.DisplayNameFor(model => model.Juveniles[0].Risk)
               </a>
            </th>
            <th>
               <a id="Back_To_List" asp-page="./Index" asp-route-sortOrder="@Model.RepeatSort"
                  asp-route-currentFilter="@Model.CurrentFilter">
                  @Html.DisplayNameFor(model => model.Juveniles[0].Repeat)
               </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Juveniles) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Age)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Race.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Gender.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Risk.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Repeat)
            </td>
            <td>
                <a id="EDbtn" asp-page="./Edit" asp-route-id="@item.ID">Edit</a> |
                <a id="EDbtn" asp-page="./Details" asp-route-id="@item.ID">Details</a> |
                <a id="EDbtn" asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.Juveniles.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Juveniles.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Juveniles.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   id="NP" class="btn btn-primary @prevDisabled">
   Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Juveniles.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   id="NP" class="btn btn-primary @nextDisabled">
   Next
</a>

@page
@model IndexModel

 @{
    ViewData["Title"] = "Home page";
    }

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        .chart-container{
            margin-top: 100px;
            margin-bottom: 100px;
        }
        
    .styled {
        text-align: center; /* Center-align the text */
    }

    .styled p {
        font-weight: bold; /* Make the text bold */
        text-decoration: underline; /* Underline the text */
        font-size: 36px;
    }
    </style>

   
<div class="header-container">
    <img id="picture_logo" src="\assets\COUNTY_LOGO_SMALL.png" asp-append-version="true" /> 
    <h1>Faulkner County Annual Juvenile Report</h1>
</div>


<div class="text-center">
    <p>This is the website for the <a href="https://www.faulknercounty.org/government/courts/2nd-div-circuit/juvenile-probation">Faulkner County Juvenile Court's</a> yearly report. Here you
     can find the information about last years juvenile arrest's in Faulkner County. Faulkner County Juvenile Court mission statement is 
     “To provide intervention to court-involved youth to prevent future delinquency, rehabilitate the juvenile, and empower the family to 
     encourage positive, appropriate behaviors that will help the youth of our community to contribute to society on into adulthood.”​</p>
</div>

<div>
    <select id="yearDropdown">
        <option value="">All Years</option>
        @foreach (var year in Model.Years)
        {
            <option value="@year">@year</option>
        }
    </select>
    <input type="submit" value="Search" class="btn btn-primary" id="searchButton" onClick="updateGraphs()" />
</div>

   
    <div class="chart-container" style="display: flex; flex-direction: row;"> 
        <!-- Graph 1 -->
        <div class= "Graphs"  style="width: 400px; height: 400px; margin-right: 70px; margin-bottom: 40px;">
            <h1>Person arrested by Race</h1>
            <canvas id="ArrestedRaceBarChart" width="400" height="400"></canvas>
        </div>
        <!-- Text 1 -->
        <div id="arrestedRaceText" style="flex: 1; font-size: 24px; margin-top: 150px;">
    </div>
    </div>

    <br>

    <div class="chart-container" style="display: flex; flex-direction: row;">
        <!-- Graph 2 -->
        <div class= "Graphs" style="width: 400px; height: 400px; margin-right: 70px; margin-bottom: 85px;">
            <h1>Person arrested by Gender</h1>
            <canvas id="genderPieChart" width="400" height="400"></canvas>
        </div>
        <!-- Text 2 -->
        <div id="genderText" style="flex: 1; font-size: 24px; margin-top: 150px;">
        </div>
    </div>

    <br>

    <div class="chart-container" style="display: flex; flex-direction: row;">
        <!-- Graph 3 -->
        <div class= "Graphs" style="width: 400px; height: 400px; margin-right: 70px; margin-bottom: 60px;">
            <h1>Person Arrested by Age</h1>
            <canvas id="agePieChart" width="400" height="400"></canvas>
        </div>
        <!-- Text 3 -->
        <div id="ageText" style="flex: 1; font-size: 24px; margin-top: 150px;">
        </div>
    </div>

    <br>

    <div style="text-align: center; font-weight:bold; margin-bottom: 40px; margin-top:40px; font-size: 24px;">
        Juvenile Court provides on-call juvenile officers 24/7/365. 
        This officer determines the youth's placement at the time of arrest given specific factors (risk to the community and mental health). 
        An objective 20th Judicial District Juvenile Court Detention Risk Assessment is used in this process with a release override if needed.
    </div>

    <br>

    <div class="chart-container" style="display: flex; flex-direction: row;">
        <!-- Graph 4 -->
        <div class= "Graphs" style="width: 400px; height: 400px; margin-right: 70px; margin-bottom: 40px;">
            <h1>Intake Decisions</h1>
            <canvas id="IntakeDecisionPieChart" width="400" height="400"></canvas>
        </div>
        <!-- Text 4 -->
         <div id="intakeText" style="flex: 1; font-size: 24px; margin-top: 150px;">
        </div>
    </div>
    <br>
    <div class="chart-container" style="display: flex; flex-direction: row;">
        <!-- Graph 5 -->
        <div class= "Graphs" style="width: 400px; height: 400px; margin-right: 70px; margin-bottom: 130px;">
            <h1>SAVRY Levels for Detained Youth Upon Intake</h1>
            <canvas id="RiskPieChart" width="400" height="400"></canvas>
        </div>
        <!-- Text 5 -->
         <div id="savryText" style="flex: 1; font-size: 24px; margin-top: 150px;">
        </div>
    </div>
    <br>
    <div class="chart-container" style="display: flex; flex-direction: row;">
        <!-- Graph 6 -->
        <div class= "Graphs" style="width: 400px; height: 400px; margin-right: 70px; margin-bottom: 40px;">
            <h1>School Related Arrests</h1>
            <canvas id="SchoolPieChart" width="400" height="400"></canvas>
        </div>
        <!-- Text 6 -->
        <div id="schoolText" style="flex: 1; font-size: 24px; margin-top: 150px;">
        </div>
    </div>
    <br>
    <div class="chart-container" style="display: flex; flex-direction: row;">
        <!-- Graph 7 -->
        <div class= "Graphs" style="width: 400px; height: 400px; margin-right: 70px; margin-bottom: 75px;">
            <h1>Prosecutor Filing Decisions</h1>
            <canvas id="FilingDecisionPieChart" width="400" height="400"></canvas>
        </div>
        <!-- Text 7 -->
        <div id="filingDecisionText" style="flex: 1; font-size: 24px; margin-top: 150px;">
        </div>
    </div>
    <br>
    <div class="chart-container" style="display: flex; flex-direction: row;">
        <!-- Graph 8 -->
        <div class= "Graphs" style="width: 400px; height: 400px; margin-right: 70px; margin-bottom: 140px;">
            <h1>School and Non-School Related Delinquency Petitions</h1>
            <canvas id="DelinquencySchoolPieChart" width="400" height="400"></canvas>
        </div>
        <!-- Text 8 -->
        <div id="DelinquencySchoolText" style="flex: 1; font-size: 24px; margin-top: 150px;">
        </div>
    </div>
    <br>
    <div class="chart-container" style="display: flex; flex-direction: row;">
        <!-- Graph 9 -->
        <div class= "Graphs" style="width: 400px; height: 400px; margin-right: 70px; margin-bottom: 75px;">
            <h1>Deliquency Petitions Filed by Race</h1>
            <canvas id="DelinquencyRaceBarChart" width="400" height="400"></canvas>
        </div>
        <!-- Text 9 -->
        <div id="DelinquencyRaceText" style="flex: 1; font-size: 24px; margin-top: 150px;">
        </div>
    </div>
    <br>
    <div class="chart-container" style="display: flex; flex-direction: row;">
        <!-- Graph 10 -->
        <div class= "Graphs" style="width: 400px; height: 400px; margin-right: 70px; margin-bottom: 75px;">
            <h1>Deliquency Petitions Filed by Gender</h1>
            <canvas id="DelinquencyGenderBarChart" width="400" height="400"></canvas>
        </div>
        <!-- Text 10 -->
        <div id="DelinquencyGenderText" style="flex: 1; font-size: 24px; margin-top: 150px;">
        </div>
    </div>
    <br>
    <div class="chart-container" style="display: flex; flex-direction: row;">
        <!-- Graph 11 -->
        <div class= "Graphs" style="width: 400px; height: 400px; margin-right: 70px; margin-bottom: 75px;">
            <h1>Deliquency Petitions Filed by Age</h1>
            <canvas id="DelinquencyAgeBarChart" width="400" height="400"></canvas>
        </div>
        <!-- Text 11 -->
        <div id="DelinquencyAgeText" style="flex: 1; font-size: 24px; margin-top: 150px;">
        </div>
    </div>
    <br>
        <div class="chart-container" style="display: flex; flex-direction: row;">
        <!-- Graph 12 -->
        <div class= "Graphs" style="width: 400px; height: 400px; margin-right: 70px; margin-bottom: 150px;">
            <h1>SAVRY Ratings of Delinquent Youth Petitions</h1>
            <canvas id="AdRiskPieChart" width="400" height="400"></canvas>
        </div>
        <!-- Text 12 -->
         <div id="adsavryText" style="flex: 1; font-size: 24px; margin-top: 150px;">
        </div>
    </div>
    <div class="styled">
        <p>Juvenile Detention Center</p>
    </div>
    <div class="chart-container" style="display: flex; flex-direction: row;">
        <!-- Graph 13 -->
        <div class= "Graphs" style="width: 400px; height: 400px; margin-right: 70px; margin-bottom: 35px;">
            <h1>Admissions by Race</h1>
            <canvas id="adracePieChart" width="400" height="400"></canvas>
        </div>
        <!-- Text 13 -->
        <div id="adraceText" style="flex: 1; font-size: 24px; margin-top: 150px;">
        </div>
    </div>
    <br>
    <div class="chart-container" style="display: flex; flex-direction: row;">
        <!-- Graph 14 -->
        <div class= "Graphs" style="width: 400px; height: 400px; margin-right: 70px; margin-bottom: 40px;">
            <h1>Admission by Gender</h1>
            <canvas id="adgenderPieChart" width="400" height="400"></canvas>
        </div>
        <!-- Text 14 -->
        <div id="adgenderText" style="flex: 1; font-size: 24px; margin-top: 150px;">
        </div>
    </div>
    <br>
    <div class="chart-container" style="display: flex; flex-direction: row;">
        <!-- Graph 15 -->
        <div class= "Graphs" style="width: 400px; height: 400px; margin-right: 70px; margin-bottom: 40px;">
            <h1>Admissions by Age</h1>
            <canvas id="adagebarChart" width="400" height="400"></canvas>
        </div>
        <!-- Text 15 -->
        <div id="adageText" style="flex: 1; font-size: 24px; margin-top: 150px;">
        </div>
    </div>
    <br>
    <div class="styled">
    <p>Juvenile Drug Court</p>
    </div>
    <br>
    <div class="chart-container" style="display: flex; flex-direction: row;">
        <!-- Graph 16 -->
        <div class= "Graphs" style="width: 400px; height: 400px; margin-right: 70px; margin-bottom: 110px;">
            <h1>Participants by Gender</h1>
            <canvas id="DrugGenderPieChart" width="400" height="400"></canvas>
        </div>
        <!-- Text 16 -->
         <div id="DrugGenderText" style="flex: 1; font-size: 24px; margin-top: 120px;">
        </div>
    </div>
    <div class="chart-container" style="display: flex; flex-direction: row;">
        <!-- Graph 17 -->
        <div class= "Graphs" style="width: 400px; height: 400px; margin-right: 70px; margin-bottom: 110px;">
            <h1>Participants by Race</h1>
            <canvas id="DrugRacePieChart" width="400" height="400"></canvas>
        </div>
        <!-- Text 17 -->
         <div id="DrugRaceText" style="flex: 1; font-size: 24px; margin-top: 150px;">
        </div>
    </div>
 
<script>
   
    Chart.defaults.color = "black";
    
    var predefinedColors = [
        'rgba(255, 165, 0, 0.8)',   // Orange
        'rgba(0, 0, 255, 0.8)',     // Blue
        'rgba(255, 255, 0, 0.8)',   // Yellow
        'rgba(169, 169, 169, 0.8)', // Grey
        'rgba(0, 128, 0, 0.8)'      // Green
        ];




    var ChartListDict = [
    {ChartId:"ArrestedRaceBarChart", TextId:"arrestedRaceText", FetchIndex:'/Index?handler=ArrestedRaceDistributionData&selectedYear=', Item1 : item => item.race, Item2 :'race', type : 'bar' },
    {ChartId:"genderPieChart", TextId:"genderText", FetchIndex:'/Index?handler=GenderDistributionData&selectedYear=', Item1: item => item.gender , Item2: 'gender', type : 'pie' },
    {ChartId:"agePieChart", TextId:"ageText", FetchIndex:'/Index?handler=AgeDistributionData&selectedYear=', Item1: item => item.ageGroups , Item2:'ageGroups', type : 'pie' },
    {ChartId:"IntakeDecisionPieChart", TextId:"intakeText", FetchIndex:'/Index?handler=IntakeDecisionDistributionData&selectedYear=', Item1: item => item.intakeDecisionCounts , Item2:'intakeDecisionCounts', type : 'pie' },
    {ChartId:"RiskPieChart", TextId:"savryText", FetchIndex:'/Index?handler=RiskDistributionData&selectedYear=', Item1: item => item.riskcount , Item2:'riskcount', type :'pie' },
    {ChartId:"SchoolPieChart", TextId:"schoolText", FetchIndex:'/Index?handler=SchoolDistributionData&selectedYear=', Item1:item => item.schoolCount , Item2 : 'schoolCount', type :'pie' },
    {ChartId:"FilingDecisionPieChart", TextId:"filingDecisionText", FetchIndex:'/Index?handler=FilingDecisionDistributionData&selectedYear=', Item1 : item => item.filingdecisioncount , Item2:'filingdecisioncount', type : 'pie' },
    {ChartId:"DelinquencySchoolPieChart", TextId:"DelinquencySchoolText", FetchIndex:'/Index?handler=DelinquencySchoolDistributionData&selectedYear=', Item1: item => item.delinquencyschool , Item2:'delinquencyschool', type : 'pie' },
    {ChartId:"DelinquencyRaceBarChart", TextId:"DelinquencyRaceText", FetchIndex:'/Index?handler=DelinquencyRaceDistributionData&selectedYear=', Item1: item => item.delinquencyrace , Item2:'delinquencyrace', type : 'bar' },
    {ChartId:"DelinquencyGenderBarChart", TextId:"DelinquencyGenderText", FetchIndex:'/Index?handler=DelinquencyGenderDistributionData&selectedYear=', Item1: item => item.delinquencygender , Item2:'delinquencygender', type: 'bar' },
    {ChartId:"DelinquencyAgeBarChart", TextId:"DelinquencyAgeText", FetchIndex:'/Index?handler=DelinquencyAgeDistributionData&selectedYear=', Item1: item => item.delinquencyage , Item2:'delinquencyage', type: 'bar' }, 
    {ChartId:"AdRiskPieChart", TextId:"adsavryText", FetchIndex:'/Index?handler=AdRiskDistributionData&selectedYear=', Item1:item => item.adriskcount , Item2:'adriskcount', type : 'pie' },
    {ChartId:"DrugGenderPieChart", TextId:"DrugGenderText", FetchIndex:'/Index?handler=DrugGenderDistributionData&selectedYear=', Item1:item => item.druggendercount , Item2:'druggendercount', type :'pie'},
    {ChartId:"adracePieChart", TextId:"adraceText", FetchIndex:'/Index?handler=RaceDistributionData&selectedYear=', Item1:item => item.race , Item2:'race', type : 'pie' },
    {ChartId:"adgenderPieChart", TextId:"adgenderText", FetchIndex:'/Index?handler=AdGenderDistributionData&selectedYear=', Item1:item => item.gender , Item2:'gender', type: 'pie' },
    {ChartId:"adagebarChart", TextId:"adageText", FetchIndex:'/Index?handler=AdAgeDistributionData&selectedYear=', Item1:item => item.ageGroups , Item2:'ageGroups', type : 'bar' }, 
    {ChartId:"DrugRacePieChart", TextId:"DrugRaceText", FetchIndex:'/Index?handler=DrugRaceDistributionData&selectedYear=', Item1:item => item.drugracecount , Item2:'drugracecount', type:'pie' }



     ]
    


    document.addEventListener('DOMContentLoaded', updateGraphs());

    async function updateGraphs()  {
        for(let i =0 ; i < ChartListDict.length; i++){
            try {
                var TempDict = ChartListDict[i]

                let chartStatus = Chart.getChart(TempDict.ChartId); // <canvas> id
                if (chartStatus != undefined) {
                    chartStatus.destroy();
                }

                var tempYear = document.getElementById('yearDropdown').value;
                


                var response = await fetch(TempDict.FetchIndex + tempYear, {
                    headers: {
                        'Accept': 'application/json'
                    }
                });
                
                if (response.ok) {

                    

                    var raceData = await response.json();
                    console.log('Received ${TempDict.FetchIndex}', raceData);
    
                    var label = TempDict.Item1;
                    var label2 = TempDict.Item2;
                    
    
                    var raceLabels = raceData.map(label);
                    var raceValues = raceData.map(item => item.count);

                    var arrestedRaceText = document.getElementById(TempDict.TextId);
                    
                    arrestedRaceText.innerHTML = raceData.map(item => `${item[label2]}: ${item.count} (${((item.count / raceData.reduce((acc, curr) => acc + curr.count, 0)) * 100).toFixed(1)}%)` ).join('<br>') +
                    `<br>Grand Total: ${raceData.reduce((acc, curr) => acc + curr.count, 0)}`;
    
                    // Use predefined colors for the first 5 colors
                    var backgroundColors = predefinedColors.slice(0, Math.min(raceLabels.length, predefinedColors.length));
                    backgroundColors = backgroundColors.concat(generateRandomColors(Math.max(0, raceLabels.length - predefinedColors.length)));


                    if (TempDict.type == 'bar'){


                    var ctx = document.getElementById(TempDict.ChartId).getContext('2d');
                    var racePieChart = new Chart(ctx, {
                        type: TempDict.type,
                        data: {
                            labels: raceLabels,
                            datasets: [{
                                data: raceValues,
                                backgroundColor: backgroundColors,
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    display: false,
                                },
                                }
                        }
                        

                    });
                    };

                    if (TempDict.type == 'pie'){


                        var ctx = document.getElementById(TempDict.ChartId).getContext('2d');
                        var racePieChart = new Chart(ctx, {
                            type: TempDict.type,
                            data: {
                                labels: raceLabels,
                                datasets: [{
                                    data: raceValues,
                                    backgroundColor: backgroundColors,
                                }]
                            },
                            options: {
                                responsive: true,
                                maintainAspectRatio: false,
                                plugins: {
                                    legend: {
                                        display: true,
                                    },
                                    }
                            }


                    });
                    

                    };

                } else {
                    console.error("Error fetching data. Status:", response.status);
                    console.log("Raw response data:", await response.text());
                }
            } catch (error) {
                console.error("Error fetching or parsing data:", error);
    
            }

        }
    };

 
    //Generate random colors
    function generateRandomColors(count) {
        var colors = [];
        var letters = '0123456789ABCDEF';
        for (var i = 0; i < count; i++) {
            var color = '#';
            for (var j = 0; j < 6; j++) {
                color += letters[Math.floor(Math.random() * 16)];
            }
            colors.push(color);
        }
        return colors;
    }
</script>
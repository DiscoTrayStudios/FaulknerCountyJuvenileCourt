@page
@model ReportModel
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <h1>Race Distribution of Juveniles</h1>
    
   <div style="width: 400px; height: 400px;">
        <canvas id="racePieChart" width="400" height="400"></canvas>
    </div>

<script>
   document.addEventListener('DOMContentLoaded', async function () {
    try {
        var response = await fetch('/Report?handler=RaceDistributionData', {
            headers: {
            'Accept': 'application/json'
        }
    });
        //console.log("Raw response data:", await response.text());
        if (response.ok) {
            var raceData = await response.json();
            
            console.log('Received raceData:', raceData);

            var raceLabels = raceData.map(item => item.race);
            var raceValues = raceData.map(item => item.count);

            var backgroundColors = generateRandomColors(raceLabels.length);

            var ctx = document.getElementById('racePieChart').getContext('2d');
            var racePieChart = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: raceLabels,
                    datasets: [{
                        data: raceValues,
                        backgroundColor: backgroundColors
                    }]
                },
                    options: {                        responsive: true,
                    maintainAspectRatio: false,
                    legend: {
                        position: 'top',
                    }
                }
            });
        } else {
            console.error("Error fetching data. Status:", response.status);
            console.log("Raw response data:", await response.text());
        }
    } catch (error) {
        console.error("Error fetching or parsing data:", error);

    }
        function generateRandomColors(count) {
        var colors = [];
        var hexDigits = '0123456789ABCDEF';
        for (var i = 0; i < count; i++) {
            var color = '#';
            for (var j = 0; j < 6; j++) {
                color += letters[Math.floor(Math.random() * 16)];
            }
            colors.push(color);
        }
        return colors;
    }
});


</script>
